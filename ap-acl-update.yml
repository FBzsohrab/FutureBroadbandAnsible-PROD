---
- name: Extract and Update MAC ACL
  hosts: litebeam_hosts
  gather_facts: no
  vars:
    ansible_user: admin
    ansible_password: FutureBroadbandAS400497
    ansible_ssh_pass: FutureBroadbandAS400497
    ansible_ssh_extra_args: "-o StrictHostKeyChecking=no"
  tasks:
    - name: Extract MAC address
      raw: "ifconfig eth0 | grep 'HWaddr' | awk '{print $5}'"
      register: mac_address_output

    - name: Display the MAC address
      debug:
        msg: "MAC address is {{ mac_address_output.stdout.strip() }}"

    - name: Ensure MAC ACL file exists
      file:
        path: /path/to/mac_acl.txt
        state: touch
      delegate_to: localhost

    - name: Save MAC address to file
      local_action:
        module: lineinfile
        path: /path/to/mac_acl.txt
        line: "{{ mac_address_output.stdout.strip() }}"
      delegate_to: localhost

    - name: Read existing MAC ACL configuration
      slurp:
        src: /etc/config_file_path
      register: current_acl_config

    - name: Parse existing MAC addresses
      set_fact:
        existing_mac_entries: "{{ current_acl_config.content | b64decode | regex_findall('wireless.1.mac_acl.[0-9]+.mac=([0-9A-Fa-f:]+)') }}"

    - name: Generate new ACL entry
      set_fact:
        acl_index: "{{ existing_mac_entries | length + 1 }}"
        new_acl_entry: |
          wireless.1.mac_acl.{{ acl_index }}.mac={{ mac_address_output.stdout.strip() }}
          wireless.1.mac_acl.{{ acl_index }}.status=enabled

    - name: Update MAC ACL configuration
      blockinfile:
        path: /etc/config_file_path
        insertafter: "wireless.1.mac_acl.*.status=enabled"
        block: "{{ new_acl_entry }}"

    - name: Save updated configuration
      raw: "cfgmtd -w -p /etc/; reboot"
