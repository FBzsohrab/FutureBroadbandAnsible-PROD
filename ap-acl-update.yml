---
- name: Configure Ubiquiti LiteBeam with MAC ACL
  hosts: litebeam_hosts
  gather_facts: no
  vars:
    ansible_user: admin
    ansible_password: FutureBroadbandAS400497
    ansible_ssh_pass: FutureBroadbandAS400497
    ansible_ssh_extra_args: "-o StrictHostKeyChecking=no"
    default_system_cfg_path: /tmp/system.cfg  # Update this path as it is on the device
  
  tasks:
    - name: Extract MAC address
      raw: "ifconfig eth0 | grep 'HWaddr' | awk '{print $5}'"
      register: mac_address_output

    - name: Display the MAC address
      debug:
        msg: "MAC address is {{ mac_address_output.stdout.strip() }}"

    - name: Read default system.cfg using raw command
      raw: "cat {{ default_system_cfg_path }}"
      register: default_system_cfg_output

    - name: Generate new MAC ACL entry
      set_fact:
        new_mac_acl_entry: |
          wireless.1.mac_acl.{{ item.index }}.mac={{ item.mac }}
          wireless.1.mac_acl.{{ item.index }}.status=enabled
      with_items:
        - { index: 80, mac: "{{ mac_address_output.stdout.strip() }}" }  # Update the index as per the existing number of ACL entries

    - name: Append new MAC ACL entry to system.cfg content
      set_fact:
        updated_system_cfg: "{{ default_system_cfg_output.stdout + '\n' + new_mac_acl_entry }}"

    - name: Write updated system.cfg to a temporary file on localhost
      local_action: copy content="{{ updated_system_cfg }}" dest="/tmp/updated_system.cfg"

    - name: Upload updated system.cfg to device
      raw: |
        echo "{{ updated_system_cfg }}" > /tmp/system.cfg

    - name: Apply the updated system.cfg
      raw: "cfgmtd -w -p /etc/"

    - name: Save the configuration to persistent storage
      raw: "cfgmtd -w -p /etc/ && reboot"

    # Uncomment the following lines if you do not want to reboot immediately
    # - name: Reboot device
    #   raw: "reboot"
