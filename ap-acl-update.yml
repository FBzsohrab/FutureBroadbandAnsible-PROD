---
- name: Configure Ubiquiti LiteBeam with MAC ACL
  hosts: litebeam_hosts
  gather_facts: no
  vars:
    ansible_user: admin
    ansible_password: FutureBroadbandAS400497
    ansible_ssh_pass: FutureBroadbandAS400497
    ansible_ssh_extra_args: "-o StrictHostKeyChecking=no"
    default_system_cfg_path: /path/to/default/system.cfg  # Update this path to your local default system.cfg
  pre_tasks:
    - name: Test SSH connection
      wait_for_connection:
        timeout: 60
  tasks:
    - name: Extract MAC address
      raw: "ifconfig eth0 | grep 'HWaddr' | awk '{print $5}'"
      register: mac_address_output

    - name: Display the MAC address
      debug:
        msg: "MAC address is {{ mac_address_output.stdout.strip() }}"

    - name: Read default system.cfg
      slurp:
        src: "{{ default_system_cfg_path }}"
      register: default_system_cfg

    - name: Decode default system.cfg
      set_fact:
        default_system_cfg_decoded: "{{ default_system_cfg.content | b64decode }}"

    - name: Generate new MAC ACL entry
      set_fact:
        new_mac_acl_entry: |
          wireless.1.mac_acl.{{ item.index }}.mac={{ item.mac }}
          wireless.1.mac_acl.{{ item.index }}.status=enabled
      with_items:
        - { index: 80, mac: "{{ mac_address_output.stdout.strip() }}" }  # Update the index as per the existing number of ACL entries

    - name: Append new MAC ACL entry to system.cfg content
      set_fact:
        updated_system_cfg: "{{ default_system_cfg_decoded + '\n' + new_mac_acl_entry }}"

    - name: Write updated system.cfg to a temporary file
      copy:
        content: "{{ updated_system_cfg }}"
        dest: /tmp/system.cfg
      delegate_to: localhost

    - name: Upload updated system.cfg to device
      copy:
        src: /tmp/system.cfg
        dest: /tmp/system.cfg

    - name: Apply the updated system.cfg
      raw: "cfgmtd -w -p /etc/"

    - name: Save the configuration
      raw: "save"

    # Uncomment the following lines if a reboot is required
    # - name: Reboot device
    #   raw: "reboot"
